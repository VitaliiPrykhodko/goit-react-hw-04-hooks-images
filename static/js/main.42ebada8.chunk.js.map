{"version":3,"sources":["ImageGallery/ImageGallery.module.css","Modal/Modal.module.css","ImageGalleryItem/ImageGalleryItem.module.css","Button/Button.module.css","Searchbar/Searchbar.module.css","Searchbar/Searchbar.js","ImageGalleryItem/ImageGalleryItem.js","ImageGallery/ImageGallery.js","Button/Button.js","Servis/Api.js","Loader/Loader.js","Modal/Modal.js","App.js","index.js"],"names":["module","exports","Searchbar","onSubmit","useState","query","setQuery","className","styles","searchbar","form","e","preventDefault","toast","error","type","buttonForm","Provider","value","buttonIcon","buttonLabel","onChange","currentTarget","input","autoComplete","autoFocus","pattern","placeholder","name","ImageGalleryItem","webformatURL","user","largeImageURL","img","src","alt","ImageGallery","pictures","handleLargeImage","gallery","map","id","onClick","galleryItem","Button","btn","key","Loading","color","height","width","timeout","Modal","onClose","largeImage","handleKeyDown","evt","code","useEffect","window","addEventListener","removeEventListener","overlay","target","modal","App","setPictures","page","setPage","searchQuery","setSearchQuery","isLoading","setIsLoading","setLargeImage","setAlt","axios","get","then","data","hits","elem","fetchApi","length","warning","prev","filterPictures","catch","message","finally","scrollTo","top","document","documentElement","scrollHeight","behavior","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","React","memo","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.42ebada8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"gallery\":\"ImageGallery_gallery__3hU23\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__2KmEu\",\"modal\":\"Modal_modal__1Bygc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"ImageGalleryItem_img__2sY6r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__1MER8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"Searchbar_searchbar__3oIMI\",\"form\":\"Searchbar_form__1oaXW\",\"buttonForm\":\"Searchbar_buttonForm__2GPIS\",\"input\":\"Searchbar_input__3MsgX\",\"buttonIcon\":\"Searchbar_buttonIcon__3W7Pc\"};","import { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Searchbar.module.css\";\nimport { FcSearch } from \"react-icons/fc\";\nimport { IconContext } from \"react-icons\";\nimport { toast } from \"react-toastify\";\n\nfunction Searchbar({ onSubmit }) {\n  const [query, setQuery] = useState(\"\");\n\n  function handleInput(e) {\n    const { value } = e.currentTarget;\n    setQuery(value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (query === \"\") {\n      toast.error(\"Enter the data in the form!\");\n      return;\n    }\n    onSubmit(query);\n    setQuery(\"\");\n  }\n\n  return (\n    <header className={styles.searchbar}>\n      <form className={styles.form} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={styles.buttonForm}>\n          <IconContext.Provider value={{ className: styles.buttonIcon }}>\n            <span className={styles.buttonLabel}>\n              <FcSearch />\n            </span>\n          </IconContext.Provider>\n        </button>\n\n        <input\n          onChange={handleInput}\n          className={styles.input}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          placeholder=\"Search images and photos\"\n          name=\"query\"\n          value={query}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport { Searchbar };\n","import PropTypes from \"prop-types\";\nimport styles from \"./ImageGalleryItem.module.css\"\n\nconst ImageGalleryItem = ({webformatURL, user, largeImageURL}) => {\n  \n    return (\n        <img className={styles.img} src={webformatURL} alt={user} data-image={largeImageURL} />\n    );\n};\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  user: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n};\n\nexport { ImageGalleryItem };\n","import PropTypes from \"prop-types\";\nimport { ImageGalleryItem } from \"../ImageGalleryItem/ImageGalleryItem\";\nimport styles from \"./ImageGallery.module.css\";\n\nconst ImageGallery = ({ pictures, handleLargeImage }) => {\n  return (\n    <ul className={styles.gallery}>\n      {pictures.map(({ id, webformatURL, user, largeImageURL }) => {\n        return (\n          <li\n            onClick={() => handleLargeImage(largeImageURL, user)}\n            key={id}\n            className={styles.galleryItem}\n          >\n            <ImageGalleryItem\n              webformatURL={webformatURL}\n              user={user}\n              largeImageURL={largeImageURL}\n              handleLargeImage={handleLargeImage}\n            />\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nImageGallery.propTypes = {\n  pictures: PropTypes.arrayOf(\n    PropTypes.shape({\n      webformatURL: PropTypes.string.isRequired,\n      user: PropTypes.string.isRequired,\n      largeImageURL: PropTypes.string.isRequired,\n      id: PropTypes.node,\n    })\n  ),\n  handleLargeImage: PropTypes.func.isRequired,\n};\n\nexport { ImageGallery };\n","import styles from \"./Button.module.css\"\nimport PropTypes from \"prop-types\";\n\n\nconst Button = ({onClick}) => {\n    return (\n        <button onClick={onClick} className={styles.btn}>Load more</button>\n    )\n}\n\nButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n}\n\nexport {Button}","import axios from 'axios';\n\nconst key = '23495092-fcdd3993ee353ca97f61af1fc';\n\nconst fetchApi = (query = '', page = 1 ) => {\n  return axios\n    .get(\n      `https://pixabay.com/api/?q=${query}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=12`,\n    )\n    .then(({ data }) => data.hits.map(elem=>elem));\n    \n};\n\nexport  {fetchApi};","import Loader from \"react-loader-spinner\";\n\nconst Loading = () => {\n    return (\n        <Loader\n        type=\"Puff\"\n        color=\"#00BFFF\"\n        height={100}\n        width={100}\n        timeout={3000}\n      />\n    )\n}\n\nexport {Loading}","import { useEffect } from \"react\";\nimport styles from \"./Modal.module.css\";\nimport PropTypes from \"prop-types\";\n\nfunction Modal({ onClose, largeImage, alt }) {\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  });\n\n  function handleKeyDown(evt) {\n    if (evt.code === \"Escape\") {\n      onClose();\n    }\n  }\n\n  function handleBackdropClick(evt) {\n    if (evt.currentTarget === evt.target) {\n      onClose();\n    }\n  }\n\n  return (\n    <div className={styles.overlay} onClick={handleBackdropClick}>\n      <div className={styles.modal}>\n        <img src={largeImage} alt={alt} />\n      </div>\n    </div>\n  );\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  largeImage: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n};\n\nexport { Modal };\n","import React, { useState, useEffect } from \"react\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Searchbar } from \"./Searchbar/Searchbar\";\nimport { ImageGallery } from \"./ImageGallery/ImageGallery\";\nimport { Button } from \"./Button/Button\";\nimport { fetchApi } from \"./Servis/Api\";\nimport { Loading } from \"./Loader/Loader\";\nimport { Modal } from \"./Modal/Modal\";\n\nfunction App() {\n  const [pictures, setPictures] = useState([]);\n  const [page, setPage] = useState(1);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [largeImage, setLargeImage] = useState(\"\");\n  const [alt, setAlt] = useState(\"\");\n\n  useEffect(() => {\n    function fetchPictures() {\n      setIsLoading(true);\n      fetchApi(searchQuery, page)\n        .then((data) => {\n          if (data.length === 0) {\n            toast.warning(\"Зображення не знайдено!\");\n          }\n          setPictures((prev) => [...prev, ...filterPictures(data)]);\n        })\n        .catch((error) => toast.error(error.message))\n        .finally(() => {\n          setIsLoading(false);\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: \"smooth\",\n          });\n        });\n    }\n    if (searchQuery) {\n      fetchPictures();\n    }\n  }, [searchQuery, page]);\n\n  function handleInput(query) {\n    setSearchQuery(query);\n    setPage(1);\n    setPictures([]);\n  }\n\n  function filterPictures(pictures) {\n    const array = pictures.map(({ id, webformatURL, user, largeImageURL }) => {\n      return { id, webformatURL, user, largeImageURL };\n    });\n    return array;\n  }\n\n  function changePage() {\n    setPage((prev) => prev + 1);\n  }\n\n  function handleLargeImage(img, alt) {\n    setLargeImage(img);\n    setAlt(alt);\n  }\n\n  function closeModal() {\n    setLargeImage(\"\");\n    setAlt(\"\");\n  }\n\n  return (\n    <div className=\"App\">\n      <Searchbar onSubmit={handleInput} />\n      {isLoading && <Loading />}\n      {pictures.length > 0 && (\n        <ImageGallery pictures={pictures} handleLargeImage={handleLargeImage} />\n      )}\n      {pictures.length > 11 && <Button onClick={changePage} />}\n      {largeImage && (\n        <Modal largeImage={largeImage} alt={alt} onClose={closeModal} />\n      )}\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={3000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n    </div>\n  );\n}\n\nexport default React.memo(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}